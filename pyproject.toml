[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "match-expression"
version = "0.3.1"
description = "A Python implementation of TypeScript's ts-pattern, type-safe pattern matching with an expressive API"
readme = "README.md"
urls = { "Homepage" = "https://github.com/qodot/match-expression", "Bug Tracker" = "https://github.com/qodot/match-expression/issues", "Repository" = "https://github.com/qodot/match-expression" }
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [{ name = "Qodot", email = "qodot@example.com" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = [
    "pattern-matching",
    "match",
    "pattern",
    "functional",
    "typescript",
    "ts-pattern",
    "type-safe",
    "exhaustive",
]
dependencies = []
optional-dependencies = { dev = ["pytest>=7.0.0", "pytest-cov>=4.0.0"] }

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src/match_expression"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]

[tool.hatch.build]
exclude = [
    ".git/",
    ".gitignore",
    ".vscode/",
    ".envrc",
    "__pycache__/",
    "*.py[cod]",
    ".uv/",
    "uv.lock",
    "CLAUDE.md",
]
